#include <stdio.h>																											 
#include "NUC1xx.h"
#include "Driver\DrvSYS.h"
#include "DrvADC.h"
#include "Seven_Segment.h"



void seg_display(int16_t value)
{
	int8_t digit;
	digit = value / 1000;
	close_seven_segment();
	show_seven_segment(3,digit);
	DrvSYS_Delay(5000);
			
	value = value - digit * 1000;
	digit = value / 100;
	close_seven_segment();
	show_seven_segment(2,digit);
	DrvSYS_Delay(5000);

	value = value - digit * 100;
	digit = value / 10;
	close_seven_segment();
	show_seven_segment(1,digit);
	DrvSYS_Delay(5000);

	value = value - digit * 10;
	digit = value;
	close_seven_segment();
	show_seven_segment(0,digit);
	DrvSYS_Delay(5000);
}

int32_t main (void)
{
	int32_t adc_value;
	
	UNLOCKREG();
	SYSCLK->PWRCON.XTL12M_EN = 1; 	//Enable 12Mhz and set HCLK->12Mhz
	SYSCLK->CLKSEL0.HCLK_S = 0;
	LOCKREG();

	DrvADC_Open(ADC_SINGLE_END,ADC_SINGLE_OP , 0x04,INTERNAL_HCLK , 1);					 	
	 
	while(1)
	{
		//while(ADC->ADSR.ADF==0);	 // ADC Flag, wait till 1 (A/DC conversion done)
		ADC->ADSR.ADF=1;			 // write 1 to ADF is to clear the flag
		                   
		adc_value=ADC->ADDR[2].RSLT; // input 12-bit ADC value, make 2
		seg_display(adc_value);      // display value to 7-segment display
		 
		ADC->ADCR.ADST=1;            // activate next ADC sample
		                             // 1 : conversion start
									               // 0 : conversion stopped, ADC enter idle state
	}
}