// Smpl_7seg_ADC7 : ADC7 to read and display on lcd answer 4 
//

#include <stdio.h>																											 
#include "NUC1xx.h"
#include "Driver\DrvSYS.h"
#include "DrvPWM.h"
#include "DrvADC.h"
#include "LCD_Driver.h"
void InitPWM(uint8_t PWM_no)
{
 	/* Step 1. GPIO initial */ 
	switch (PWM_no) {
		case 0 : SYS->GPAMFP.PWM0_AD13=1;     // Enable PWM0 multi-function pin
             SYSCLK->CLKSEL1.PWM01_S = 0; // Select 12Mhz for PWM clock source		
             SYSCLK->APBCLK.PWM01_EN =1;  // Enable PWM0 & PWM1 clock	
	           PWMA->PPR.CP01=1;			      // Prescaler 0~255, Setting 0 to stop output clock
	           PWMA->CSR.CSR0=0;			      // PWM clock = clock source/(Prescaler + 1)/divider
	           PWMA->PCR.CH0MOD=1;			    // 0:One-shot mode, 1:Auto-load mode
 								                          // CNR and CMR will be auto-cleared after setting CH0MOD form 0 to 1.	
	           PWMA->CNR0=0xFFFF;           // CNR : counting down   // PWM output high if CMRx+1 >= CNR
	           PWMA->CMR0=0xFFFF;		        // CMR : fix to compare  // PWM output low  if CMRx+1 <  CNR
	           PWMA->PCR.CH0INV=0;          // Inverter->0:off, 1:on
	           PWMA->PCR.CH0EN=1;			      // PWM function->0:Disable, 1:Enable
  	         PWMA->POE.PWM0=1;			      // Output to pin->0:Diasble, 1:Enable		
		         break;
		case 1 : SYS->GPAMFP.PWM1_AD14=1;     // Enable PWM1 multi-function pin
             SYSCLK->CLKSEL1.PWM01_S = 0; // Select 12Mhz for PWM clock source		
             SYSCLK->APBCLK.PWM01_EN =1;  // Enable PWM0 & PWM1 clock	
	           PWMA->PPR.CP01=1;			      // Prescaler 0~255, Setting 0 to stop output clock
	           PWMA->CSR.CSR1=0;			      // PWM clock = clock source/(Prescaler + 1)/divider
	           PWMA->PCR.CH1MOD=1;			    // 0:One-shot mode, 1:Auto-load mode
								                          // CNR and CMR will be auto-cleared after setting CH1MOD form 0 to 1.	
	           PWMA->CNR1=0xFFFF;           // CNR : counting down   // PWM output high if CMRx+1 >= CNR
	           PWMA->CMR1=0xFFFF;		        // CMR : fix to compare  // PWM output low  if CMRx+1 <  CNR		
	           PWMA->PCR.CH1INV=0;          // Inverter->0:off, 1:on
	           PWMA->PCR.CH1EN=1;			      // PWM function->0:Disable, 1:Enable
  	         PWMA->POE.PWM1=1;			      // Output to pin->0:Diasble, 1:Enable							 
						 break;
		case 2 : SYS->GPAMFP.PWM2_AD15=1;     // Enable PWM2 multi-function pin
             SYSCLK->CLKSEL1.PWM23_S = 0; // Select 12Mhz for PWM clock source		
             SYSCLK->APBCLK.PWM23_EN =1;  // Enable PWM2 & PWM3 clock	
	           PWMA->PPR.CP23=1;			      // Prescaler 0~255, Setting 0 to stop output clock
	           PWMA->CSR.CSR2=0;			      // PWM clock = clock source/(Prescaler + 1)/divider
	           PWMA->PCR.CH2MOD=1;			    // 0:One-shot mode, 1:Auto-load mode
								                          // CNR and CMR will be auto-cleared after setting CH2MOD form 0 to 1.	
	           PWMA->CNR2=0xFFFF;           // CNR : counting down   // PWM output high if CMRx+1 >= CNR
	           PWMA->CMR2=0xFFFF;		        // CMR : fix to compare  // PWM output low  if CMRx+1 <  CNR
	           PWMA->PCR.CH2INV=0;          // Inverter->0:off, 1:on
	           PWMA->PCR.CH2EN=1;			      // PWM function->0:Disable, 1:Enable
  	         PWMA->POE.PWM2=1;			      // Output to pin->0:Diasble, 1:Enable						 
		         break;						 
		case 3 : SYS->GPAMFP.PWM3_I2SMCLK=1;  // Enable PWM3 multi-function pin
             SYSCLK->CLKSEL1.PWM23_S = 0; // Select 12Mhz for PWM clock source		
             SYSCLK->APBCLK.PWM23_EN =1;  // Enable PWM2 & PWM3 clock	
	           PWMA->PPR.CP23=1;			      // Prescaler 0~255, Setting 0 to stop output clock
	           PWMA->CSR.CSR3=0;			      // PWM clock = clock source/(Prescaler + 1)/divider
	           PWMA->PCR.CH3MOD=1;			    // 0:One-shot mode, 1:Auto-load mode
								                          // CNR and CMR will be auto-cleared after setting CH2MOD form 0 to 1.	
	           PWMA->CNR3=0xFFFF;           // CNR : counting down   // PWM output high if CMRx+1 >= CNR
	           PWMA->CMR3=0xFFFF;		        // CMR : fix to compare  // PWM output low  if CMRx+1 <  CNR
	           PWMA->PCR.CH3INV=0;          // Inverter->0:off, 1:on
	           PWMA->PCR.CH3EN=1;			      // PWM function->0:Disable, 1:Enable
  	         PWMA->POE.PWM3=1;			      // Output to pin->0:Diasble, 1:Enable						 
		         break;  
		case 4 : SYS->GPBMFP.TM3_PWM4=1;      // Enable PWM0 multi-function pin
             SYSCLK->CLKSEL2.PWM45_S = 0; // Select 12Mhz for PWM clock source		
             SYSCLK->APBCLK.PWM45_EN =1;  // Enable PWM0 & PWM1 clock	
	           PWMB->PPR.CP01=1;			      // Prescaler 0~255, Setting 0 to stop output clock
	           PWMB->CSR.CSR0=0;			      // PWM clock = clock source/(Prescaler + 1)/divider
	           PWMB->PCR.CH0MOD=1;			    // 0:One-shot mode, 1:Auto-load mode
 								                          // CNR and CMR will be auto-cleared after setting CH0MOD form 0 to 1.	
	           PWMB->CNR0=0xFFFF;           // CNR : counting down   // PWM output high if CMRx+1 >= CNR
	           PWMB->CMR0=0xFFFF;		        // CMR : fix to compare  // PWM output low  if CMRx+1 <  CNR
	           PWMB->PCR.CH0INV=0;          // Inverter->0:off, 1:on
	           PWMB->PCR.CH0EN=1;			      // PWM function->0:Disable, 1:Enable
  	         PWMB->POE.PWM0=1;			      // Output to pin->0:Diasble, 1:Enable		
		         break; 
		case 5 : SYS->GPEMFP.PWM5=1;          // Enable PWM5 multi-function pin
		         SYSCLK->APBCLK.PWM45_EN = 1; // Enable PWM45 clock
             SYSCLK->CLKSEL2.PWM45_S = 0; // Select 12Mhz for PWM clock source		
             SYSCLK->APBCLK.PWM45_EN =1;  // Enable PWM4 & PWM5 clock	
	           PWMB->PPR.CP01=1;			      // Prescaler 0~255, Setting 0 to stop output clock
	           PWMB->CSR.CSR1=0;			      // PWM clock = clock source/(Prescaler + 1)/divider
	           PWMB->PCR.CH1MOD=1;			    // 0:One-shot mode, 1:Auto-load mode
								                          // CNR and CMR will be auto-cleared after setting CH1MOD form 0 to 1.	
	           PWMB->CNR1=0xFFFF;           // CNR : counting down   // PWM output high if CMRx+1 >= CNR
	           PWMB->CMR1=0xFFFF;		        // CMR : fix to compare  // PWM output low  if CMRx+1 <  CNR		
	           PWMB->PCR.CH1INV=0;          // Inverter->0:off, 1:on
	           PWMB->PCR.CH1EN=1;			      // PWM function->0:Disable, 1:Enable
  	         PWMB->POE.PWM1=1;			      // Output to pin->0:Diasble, 1:Enable							 
						 break;
		case 6 : SYS->GPEMFP.PWM6=1;          // Enable PWM2 multi-function pin
             SYSCLK->CLKSEL2.PWM67_S = 0; // Select 12Mhz for PWM clock source		
             SYSCLK->APBCLK.PWM67_EN =1;  // Enable PWM2 & PWM3 clock	
	           PWMB->PPR.CP23=1;			      // Prescaler 0~255, Setting 0 to stop output clock
	           PWMB->CSR.CSR2=0;			      // PWM clock = clock source/(Prescaler + 1)/divider
	           PWMB->PCR.CH2MOD=1;			    // 0:One-shot mode, 1:Auto-load mode
								                          // CNR and CMR will be auto-cleared after setting CH2MOD form 0 to 1.	
	           PWMB->CNR2=0xFFFF;           // CNR : counting down   // PWM output high if CMRx+1 >= CNR
	           PWMB->CMR2=0xFFFF;		        // CMR : fix to compare  // PWM output low  if CMRx+1 <  CNR
	           PWMB->PCR.CH2INV=0;          // Inverter->0:off, 1:on
	           PWMB->PCR.CH2EN=1;			      // PWM function->0:Disable, 1:Enable
  	         PWMB->POE.PWM2=1;			      // Output to pin->0:Diasble, 1:Enable						 
		         break;							 
		case 7 : SYS->GPEMFP.PWM7=1;          // Enable PWM3 multi-function pin
             SYSCLK->CLKSEL2.PWM67_S = 0; // Select 12Mhz for PWM clock source		
             SYSCLK->APBCLK.PWM67_EN =1;  // Enable PWM2 & PWM3 clock	
	           PWMB->PPR.CP23=1;			      // Prescaler 0~255, Setting 0 to stop output clock
	           PWMB->CSR.CSR3=0;			      // PWM clock = clock source/(Prescaler + 1)/divider
	           PWMB->PCR.CH3MOD=1;			    // 0:One-shot mode, 1:Auto-load mode
								                          // CNR and CMR will be auto-cleared after setting CH2MOD form 0 to 1.	
	           PWMB->CNR3=0xFFFF;           // CNR : counting down   // PWM output high if CMRx+1 >= CNR
	           PWMB->CMR3=0xFFFF;		        // CMR : fix to compare  // PWM output low  if CMRx+1 <  CNR
	           PWMB->PCR.CH3INV=0;          // Inverter->0:off, 1:on
	           PWMB->PCR.CH3EN=1;			      // PWM function->0:Disable, 1:Enable
  	         PWMB->POE.PWM3=1;			      // Output to pin->0:Diasble, 1:Enable						 
		         break;
		default :break;
	}
}

 int32_t main (void)
{ 
	//char value[15]; 
	int16_t x=0xffff;
	UNLOCKREG();
	SYSCLK->PWRCON.XTL12M_EN = 1; 	//Enable 12Mhz and set HCLK->12Mhz
	SYSCLK->CLKSEL0.HCLK_S = 0;
	LOCKREG();
	InitPWM(0);
	Initial_panel();  // initialize LCD pannel
  clr_all_panel();  // clear LCD panel 
  print_lcd(0,"variable reistor");
  
while(1)
   {
   PWMA->CMR0=x;
		 x = x - 1;
    DrvSYS_Delay(5000);
		 //sprintf(value,"%d",ADC->ADDR[0].RSLT);
		// print_lcd(1,"value");
    }


}
